@use 'sass:map';
@use 'sass:list';

$variants: (
    'all': '',
    't': 'top',
    'b': 'bottom',
    'r': 'right',
    'l': 'left',
    'y': (
        'top',
        'bottom',
    ),
    'x': (
        'left',
        'right',
    ),
) !default;

// return class modifier i.e '-t' for top
@function classPrefix($direction-id) {
    @if $direction-id != 'all' {
        @return -#{$direction-id};
    }

    // 'all' does not have a prefix
    @return '';
}

// return css prop modifiers i.e. '-top' for top
// can return a list i.e. ('-top','-bottom')
@function cssSuffixes($direction-id) {
    $props: map.get($variants, $direction-id);
    $output: ();

    @if $props == '' {
        @return '';
    }

    @each $prop in $props {
        $output: list.append($output, -#{$prop});
    }

    @return $output;
}

// return a map in the shape:
// ('y': (classsPrefix: '-y', propSuffixes: ('-top','-bottom'))
// @debug getDirections((t, b, y));
@function getDirections($direction-list) {
    $output: ();

    @each $direction in $direction-list {
        $output-item: (
            classPrefix: classPrefix($direction),
            propSuffixes: cssSuffixes($direction),
        );

        $output: map.set($output, $direction, $output-item);
    }

    @return $output;
}

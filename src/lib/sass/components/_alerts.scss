@use 'sass:map';
@use 'sass:color';
@use '../utilities/colors';
@use './internal/closebutton';

$colors: colors.componentColors();

$border-radius: 2px !default;
$border-width: 0 !default;
$padding: 0.75rem 1rem !default;
$font-size: 0.875rem !default;

$color-lightness: -80% !default; // color scale factor
$background-lightness: 90% !default; // background color scale factor

// Header
$header-font-size: 0.875rem !default;
$header-font-weight: 600 !default;
$header-margin: 0 0 0.5rem 0 !default;
// Links
$link-font-weight: 600 !default;

@mixin alert($colorName, $color) {
    .alert-#{$colorName} {
        color: color.scale($color, $lightness: $color-lightness);
        background-color: color.scale($color, $lightness: $background-lightness);

        @if $border-width > 0 {
            border-color: $color;
        }
    }
}

.alert {
    border-radius: $border-radius;
    border-width: $border-width;
    border-style: solid;
    font-size: $font-size;
    display: flex;
    align-items: flex-start;
    transition: opacity 150ms ease-in-out;

    &--closebtn {
        & .alert__content {
            padding-right: 0;
        }
    }

    &__content {
        padding: $padding;
        flex-grow: 1;
    }

    &__header {
        font-size: $header-font-size;
        font-weight: $header-font-weight;
        margin: $header-margin;
    }

    & a {
        color: inherit;
        font-weight: $link-font-weight;
    }

    &--opening,
    &--closing {
        opacity: 0;
    }

    &--open {
        opacity: 1;
    }
}

@each $colorName, $color in $colors {
    @include alert($colorName, $color);
}

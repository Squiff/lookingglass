@use 'sass:math';
@use './config';
@use '../utilities/utils';

$font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans',
    'Helvetica Neue', sans-serif;

$line-height: 1.4 !default;

$h1-size: 2.5rem !default;
$h2-size: 2rem !default;
$h3-size: 1.75rem !default;
$h4-size: 1.5rem !default;
$h5-size: 1.25rem !default;
$h6-size: 1rem !default;

$heading-weight: 500 !default;
$heading-margin: 0.75rem !default;
$paragraph-margin: 0.75rem !default;

$fluid-enabled: true !default;
$rem-unit: 16px !default; // this does not set anything. Used in fluid font calculation
$fluid-base: 1.25rem !default; // fonts are only fluid above this size
$fluid-start: 200px !default; // screen size for min font-size
$fluid-end: 1200px !default; // screen size for max font size
$fluid-scale: 5 !default; // scale factor to calc min font size

// // Fluid sizing
// get the minimum font size that text can shrink to
@function _minTextSize($font-size) {
    @return $fluid-base + (($font-size - $fluid-base) / $fluid-scale);
}

// convert rem to pixels
@function _remToPx($rem) {
    @return ($rem / 1rem) * $rem-unit;
}

// convert pixels to rem
@function _pxToRem($px) {
    @return ($px / $rem-unit) * 1rem;
}

// font-size should go from $minSize-$maxSize between screen sizes $minView-$maxView
@mixin fluidText($maxSizeRem) {
    // always include as a fallback
    font-size: $maxSizeRem;

    // only include fluid calc if above base size
    @if $maxSizeRem > $fluid-base and $fluid-enabled {
        $minSizeRem: _minTextSize($maxSizeRem);

        $maxSizePx: _remToPx($maxSizeRem);
        $minSizePx: _remToPx($minSizeRem);

        $fontSizeDiff: $maxSizePx - $minSizePx;
        $viewDiff: $fluid-end - $fluid-start;

        $slope: utils.round(($fontSizeDiff / $viewDiff), 3);
        $intercept: $maxSizePx - ($slope * $fluid-end);

        $slopeVw: $slope * 100vw;
        $interceptRem: utils.round(_pxToRem($intercept), 3);

        font-size: min(#{max(#{$minSizeRem}, calc(#{$interceptRem} + #{$slopeVw}))}, #{$maxSizeRem});
    }
}

body {
    font-family: $font-family;
    color: config.$text-color;
    line-height: $line-height;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-weight: $heading-weight;
    margin-top: 0;
    margin-bottom: $heading-margin;
    line-height: 1.2;
}

h1 {
    @include fluidText($h1-size);
}

h2 {
    @include fluidText($h2-size);
}

h3 {
    @include fluidText($h3-size);
}

h4 {
    @include fluidText($h4-size);
}

h5 {
    @include fluidText($h5-size);
}

h6 {
    @include fluidText($h6-size);
}

p {
    margin-top: 0;
    margin-bottom: $paragraph-margin;
}

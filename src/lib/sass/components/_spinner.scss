@use 'sass:math';
@use 'sass:map';
@use './config';

$animation-duration: 1.5s !default;
// Spinner uses currentColor this is the default color if none is supplied.
$color: map.get(config.$theme, 'info') !default;

// svg viewbox is 100x 100y
$svg-radius: 40;
$svg-circumference: 2 * math.$pi * $svg-radius;

.spinner {
    width: 35px;
    height: 35px;
    color: $color;
    transform: rotateZ(-90deg);
    animation: rotate-animation $animation-duration linear infinite;

    &__circle {
        fill: none;
        stroke-width: 12;
        stroke: currentColor;
        animation: fill-animation $animation-duration linear infinite;
    }

    &__halo {
        fill: none;
        stroke-width: 16;
        stroke: currentColor;
        opacity: 0.2;
    }

    &--s {
        height: 20px;
        width: 20px;

        & .spinner__circle {
            stroke-width: 18;
        }

        & .spinner__halo {
            stroke-width: 22;
        }
    }

    &--l {
        height: 50px;
        width: 50px;

        & .spinner__circle {
            stroke-width: 8;
        }

        & .spinner__halo {
            stroke-width: 10;
        }
    }
}

// stroke-dasharray: [draw-length] [gap]
// stroke-dashoffset: +ve to pull dash start point / -ve to push
@keyframes fill-animation {
    0% {
        stroke-dasharray: 0 $svg-circumference;
        stroke-dashoffset: 0;
    }
    50% {
        stroke-dasharray: $svg-circumference;
        stroke-dashoffset: 0;
    }
    100% {
        stroke-dasharray: $svg-circumference;
        stroke-dashoffset: -$svg-circumference;
    }
}

@keyframes rotate-animation {
    0% {
        transform: rotateZ(-90deg);
    }
    100% {
        transform: rotateZ(270deg);
    }
}

.loader__loading {
    text-align: center;
}

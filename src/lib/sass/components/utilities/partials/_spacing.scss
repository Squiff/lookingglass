@use 'sass:map';
@use '../../../utilities/directions';

// generate margin classes
$margin: true !default;
// generate padding classes
$padding: true !default;
// add margin auto sizing
$margin-auto: true !default;

// size variations
$sizes: (
    0: 0px,
    1: 4px,
    2: 8px,
    3: 16px,
    4: 24px,
    5: 32px,
) !default;

// direction prefix and property modifiers
$directions: ('all', 't', 'b', 'r', 'l', 'y', 'x') !default;

// returns shape ('y': (classsPrefix: '-y', propSuffixes: ('-top','-bottom'))
$direction-map: directions.getDirections($directions);

@mixin spacer($property, $class-prefix, $sizes) {
    @each $direction in $directions {
        @each $size-id, $size in $sizes {
            $direction-props: map.get($direction-map, $direction);
            $direction-prefix: map.get($direction-props, 'classPrefix');
            $direction-suffixes: map.get($direction-props, 'propSuffixes');

            .#{$class-prefix}#{$direction-prefix}--#{$size-id} {
                @each $direction-suffix in $direction-suffixes {
                    #{$property}#{$direction-suffix}: $size !important;
                }
            }
        }
    }
}

// generate margin class
@if $margin {
    $margin-sizes: $sizes;
    @if $margin-auto {
        $margin-sizes: map.set($margin-sizes, auto, auto);
    }

    @include spacer('margin', 'm', $margin-sizes);
}

// generate padding classes
@if $padding {
    @include spacer('padding', 'p', $sizes);
}
